// ุงุณุชูุฑุงุฏ Express ูุฅูุดุงุก "ุฑุงูุชุฑ" ุฎุงุต ุจุงููุณุงุฑุงุช
const express = require('express');
const router = express.Router();

// ุงุณุชูุฑุงุฏ "ูููุฐุฌ ุงููุญุตู" ุงูุฐู ุฃูุดุฃูุงู
const Collector = require('../models/Collector');

// ๐ก ุณุทุฑ ุฌุฏูุฏ: ุงุณุชูุฑุงุฏ ุงูู middleware ูููุตุงุฏูุฉ ูุงูุตูุงุญูุงุช
const { authenticateToken, authorizeRoles } = require('../middleware/authMiddleware');

// ๐ก ุณุทุฑ ุฌุฏูุฏ: ุชุทุจูู authenticateToken ุนูู ุฌููุน ุงููุณุงุฑุงุช ูู ูุฐุง ุงูุฑุงูุชุฑ
// ูุฐุง ูุถูู ุฃู ุฌููุน ุงููุณุงุฑุงุช ุฃุฏูุงู ุชุชุทูุจ ุชุณุฌูู ุงูุฏุฎูู.
router.use(authenticateToken); 

// --- ุชุนุฑูู ุงููุณุงุฑุงุช (ูุงุฆูุฉ ุงูุทุนุงู) ---

// ุงููุณุงุฑ 1: ุฌูุจ ุฌููุน ุงููุญุตููู
// ๐ก ููุงุญุธุฉ: ูุฐุง ุงููุณุงุฑ ุงูุขู ูุญูู ุจู `authenticateToken` ุจุณุจุจ `router.use()` ุฃุนูุงู.
router.get('/', async (req, res) => {
    try {
        const collectors = await Collector.find().sort({ collectorCode: 1 });
        res.json(collectors);
    } catch (err) {
        res.status(500).json({ message: 'ุญุฏุซ ุฎุทุฃ ูู ุงูุฎุงุฏู' });
    }
});

// ุงููุณุงุฑ 2: ููุจุญุซ ุงูุฐูู ุนู ุงููุญุตููู
// ๐ก ููุงุญุธุฉ: ูุฐุง ุงููุณุงุฑ ุงูุขู ูุญูู ุจู `authenticateToken` ุจุณุจุจ `router.use()` ุฃุนูุงู.
router.get('/search', async (req, res) => {
    try {
        const searchTerm = req.query.q || '';
        if (!searchTerm) {
            return res.json([]);
        }

        const regex = new RegExp(searchTerm, 'i');

        const collectors = await Collector.find({
            $or: [
                { name: regex },
                { collectorCode: regex }
            ]
        }).limit(10); 

        res.json(collectors);
    } catch (err) {
        res.status(500).json({ message: 'ุญุฏุซ ุฎุทุฃ ูู ุงูุฎุงุฏู ุฃุซูุงุก ุงูุจุญุซ.' });
    }
});


// ุงููุณุงุฑ 3: ุฌูุจ ูุญุตู ูุงุญุฏ ุจูุงุณุทุฉ ID
// ๐ก ููุงุญุธุฉ: ูุฐุง ุงููุณุงุฑ ุงูุขู ูุญูู ุจู `authenticateToken` ุจุณุจุจ `router.use()` ุฃุนูุงู.
router.get('/:id', async (req, res) => {
    try {
        const collector = await Collector.findById(req.params.id);
        if (!collector) {
            return res.status(404).json({ message: 'ูู ูุชู ุงูุนุซูุฑ ุนูู ุงููุญุตู' });
        }
        res.json(collector);
    } catch (err) {
        res.status(500).json({ message: 'ุญุฏุซ ุฎุทุฃ ูู ุงูุฎุงุฏู' });
    }
});

// ุงููุณุงุฑ 4: ุฅุถุงูุฉ ูุญุตู ุฌุฏูุฏ
// ๐ก ุฅุถุงูุฉ: ูุชุทูุจ ุฏูุฑ 'admin' ุฃู 'manager'
router.post('/', authorizeRoles('admin', 'manager'), async (req, res) => {
    const collector = new Collector({
        collectorCode: req.body.collectorCode,
        name: req.body.name,
        openingBalance: req.body.openingBalance
    });

    try {
        const newCollector = await collector.save();
        res.status(201).json(newCollector);
    } catch (err) {
        if (err.code === 11000) {
            return res.status(400).json({ message: `ููุฏ ุงููุญุตู "${req.body.collectorCode}" ูุณุชุฎุฏู ุจุงููุนู.` });
        }
        res.status(400).json({ message: 'ูุดู ูู ุฅุถุงูุฉ ุงููุญุตู.' });
    }
});

// ุงููุณุงุฑ 5: ุชุญุฏูุซ ุจูุงูุงุช ูุญุตู
// ๐ก ุฅุถุงูุฉ: ูุชุทูุจ ุฏูุฑ 'admin' ุฃู 'manager'
router.patch('/:id', authorizeRoles('admin', 'manager'), async (req, res) => {
    try {
        const updatedCollector = await Collector.findByIdAndUpdate(
            req.params.id, 
            req.body, 
            { new: true, runValidators: true }
        );

        if (!updatedCollector) {
            return res.status(404).json({ message: 'ูู ูุชู ุงูุนุซูุฑ ุนูู ุงููุญุตู' });
        }
        
        res.json(updatedCollector);
    } catch (err) {
        if (err.code === 11000) {
            return res.status(400).json({ message: `ููุฏ ุงููุญุตู "${req.body.collectorCode}" ูุณุชุฎุฏู ุจุงููุนู.` });
        }
        res.status(400).json({ message: 'ูุดู ูู ุชุญุฏูุซ ุจูุงูุงุช ุงููุญุตู.' });
    }
});

// ุงููุณุงุฑ 6: ุญุฐู ูุญุตู
// ๐ก ุฅุถุงูุฉ: ูุชุทูุจ ุฏูุฑ 'admin' ููุท
router.delete('/:id', authorizeRoles('admin'), async (req, res) => {
    try {
        const deletedCollector = await Collector.findByIdAndDelete(req.params.id);

        if (!deletedCollector) {
            return res.status(404).json({ message: 'ูู ูุชู ุงูุนุซูุฑ ุนูู ุงููุญุตู' });
        }

        res.json({ message: 'ุชู ุญุฐู ุงููุญุตู ุจูุฌุงุญ' });
    } catch (err) {
        res.status(500).json({ message: 'ุญุฏุซ ุฎุทุฃ ูู ุงูุฎุงุฏู ุฃุซูุงุก ูุญุงููุฉ ุงูุญุฐู.' });
    }
});

// ุชุตุฏูุฑ ุงูุฑุงูุชุฑ ููู ูุชููู ุงูุฎุงุฏู ุงูุฑุฆูุณู ูู ุงุณุชุฎุฏุงูู
module.exports = router;